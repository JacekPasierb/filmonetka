var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},e={},n={},a=t.parcelRequired7c6;null==a&&((a=function(t){if(t in e)return e[t].exports;if(t in n){var a=n[t];delete n[t];var i={id:t,exports:{}};return e[t]=i,a.call(i.exports,i,i.exports),i.exports}var s=new Error("Cannot find module '"+t+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(t,e){n[t]=e},t.parcelRequired7c6=a);var i=a("hGVxz");const s="bd1f74544935b756e43565ea50ae79a5",l="https://api.themoviedb.org/3",d="watched",o="queue",c=JSON.parse(localStorage.getItem(d))||[],r=JSON.parse(localStorage.getItem(o))||[],v=t=>{localStorage.setItem(d,JSON.stringify(t))},u=t=>{localStorage.setItem(o,JSON.stringify(t))};a("b08YZ");const m=t=>{const e=c.find((e=>e.id===t.id));e?(c.splice(c.indexOf(e),1),v(c)):(c.push(t),v(c))},p=t=>{const e=r.find((e=>e.id===t.id));e?(r.splice(r.indexOf(e),1),u(r)):(r.push(t),u(r))};(0,(f=a("b08YZ")).qs)(".modal__button-watched"),(0,f.qs)(".modal__button-queue");const b=(0,f.qs)(".watched-movies"),_=(t,e)=>{(t.classList.contains("button--active")||(t.classList.add("button--active"),t.disabled=!0,e.classList.remove("button--active"),e.disabled=!1),c.length)?b.innerHTML=c.map((t=>{const e=t.poster_path?`https://image.tmdb.org/t/p/${window.devicePixelRatio>1?"w780":"w500"}/${t.poster_path}`:t.title,n=t.release_date,a=n?n.slice(0,4):"Unknown year";return`\n      <li class="MovieCard" data-movie="${t.id}">\n        <div class="MoviePoster">\n            <img class="MoviePosterImg"\n            src="${e}"\n            alt=${t.title??t.name}\n            loading="lazy"\n            />\n        </div>\n        <div class="MovieData">\n          <p class="MovieTitle">${t.title??t.name}</p>\n          <p class="MovieInfo">Genre | ${a}</p>\n        </div>\n      </li>`})).join(""):b.innerHTML=""},g=(t,e)=>{(t.classList.contains("button--active")||(t.classList.add("button--active"),t.disabled=!0,e.classList.remove("button--active"),e.disabled=!1),r.length)?b.innerHTML=r.map((t=>{const e=t.poster_path?`https://image.tmdb.org/t/p/${window.devicePixelRatio>1?"w780":"w500"}/${t.poster_path}`:t.title,n=t.release_date,a=n?n.slice(0,4):"Unknown year";return`\n      <li class="MovieCard" data-movie="${t.id}">\n        <div class="MoviePoster">\n            <img class="MoviePosterImg"\n            src="${e}"\n            alt=${t.title??t.name}\n            loading="lazy"\n            />\n        </div>\n        <div class="MovieData">\n          <p class="MovieTitle">${t.title??t.name}</p>\n          <p class="MovieInfo">Genre | ${a}</p>\n        </div>\n      </li>`})).join(""):b.innerHTML=""};var f;const h=(0,(f=a("b08YZ")).qs)("body"),y=document.createElement("header");y.classList.add("header-library"),h.prepend(y);const E=document.createElement("div");E.classList.add("container-background"),y.prepend(E);const w=(0,f.qs)(".container-background");w.insertAdjacentHTML("afterbegin",'<a class="header-library__image-link" href="./index.html">\n<svg class="HeaderSvgFilm">\n          <use href="/symbol-defs.a8b2e413.svg#icon-film"></use>\n        </svg>\n    <span class="header-library__image-span">Filmoteka</span>\n    </a>');const L=document.createElement("ul");L.classList.add("navigation"),L.style="list-style:none",w.append(L);(0,f.qs)(".navigation").insertAdjacentHTML("afterbegin",'<li class="navigation-list">\n<a class="navigation-list__link" href="index.html">home</a>\n</li>\n<li class="navigation-list">\n<a class="navigation-list__link--active" href="my-library.html">my library</a>\n</li>');const k=document.createElement("ul");k.classList.add("buttons"),k.style="list-style:none",w.append(k);(0,f.qs)(".buttons").insertAdjacentHTML("afterbegin",'<li class="buttons-list">\n<button class="button-library" type="button" id="btnWatchedGallery">watched</button>\n</li>\n<li class="buttons-list">\n<button class="button-library" type="button" id="btnQueueGallery">queue</button>\n</li>');const D=(0,f.qs)("[data-modal]"),$=()=>D.classList.toggle("is-hidden"),x=(0,f.qs)("#btnWatchedGallery"),M=(0,f.qs)("#btnQueueGallery"),T=async t=>{try{const e=await(async t=>(await i.default.get(`${l}/movie/${t}?api_key=${s}&language=en-US`)).data)(t),n=e.title,a=e.vote_average.toFixed(1),d=e.vote_count,o=e.popularity.toFixed(1),v=e.original_title,u=e.genres.map((t=>t.name)).join(", "),b=e.overview,_=(0,f.qs)(".mov"),g=e.poster_path?`https://image.tmdb.org/t/p/${window.devicePixelRatio>1?"w780":"w500"}/${e.poster_path}`:e.title;_.innerHTML=` \n\t\t<div class="box modal__row">\n              <img class="modal__poster" src=${g} alt="plakat filmu" sizes="(min-width: 1200px) 370px" />\n\t          <div>\n\t\t          <div class="modal__tittle-film">${n}\n\t\t\t\t  </div>\n\t\t          <div class="modal__values">\n\t\t                 <ul class="modal__list">\n\t\t\t\t\t\t <li class="modal__details"> \n\t\t\t\t\t\t <div class="modal__list-left">Vote&nbsp/&nbspVotes</div>\n\t\t\t\t\t\t <div class="modal__list-right">\n\t\t\t\t\t\t            <span class="modal__vote-details">${a}</span>\n\t\t\t\t\t\t\t\t\t<span class="modal__list-left">/</span> \n\t\t\t\t\t\t\t\t\t<span class="modal__vote-summary">${d}</span>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class="modal__details"> \n\t\t\t\t\t\t <div class="modal__list-left">Popularity</div>\n\t\t\t\t\t\t <div class="modal__list-right">${o}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class="modal__details"> \n\t\t\t\t\t\t <div class="modal__list-left">Original&nbspTitle</div>\n\t\t\t\t\t\t <div class="modal__list-right">${v}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class="modal__details"> \n\t\t\t\t\t\t <div class="modal__list-left">Genre</div>\n\t\t\t\t\t\t <div class="modal__list-right">${u}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t </ul>\n\t\t                 \n\t\t          </div>\n\t\t          <div class="modal__tittle-describe-tittle">About</div>\n\t\t             <p class="modal__tittle-describe">\n\t\t              ${b}\n\t\t                  </p>\n\t\t              <div class="modal__buttons">\n\t\t             <button class="modal__button-watched" id="watched">add to Watched</button>\n\t\t              <button class="modal__button-queue" id="queue">add to queue</button>\n\t\t                </div>\n\t\t       </div>\n\t\t</div>`;const h=(0,f.qs)("#watched"),y=(0,f.qs)("#queue");c.find((t=>t.id===e.id))?(h.style.background="green",h.textContent="DELETED FROM WATCHED"):(h.style.background="#ff6b01",h.textContent="ADD TO WATCHED"),r.find((t=>t.id===e.id))?(y.style.background="#545454",y.textContent="DELETED FROM QUEUE"):(y.style.background="white",y.textContent="ADD TO QUEUE"),h.addEventListener("click",(t=>{c.find((t=>t.id===e.id))?(h.style.background="#ff6b01",h.textContent="ADD TO WATCHED"):(h.style.background="green",h.textContent="DELETED FROM WATCHED"),m(e)})),y.addEventListener("click",(t=>{r.find((t=>t.id===e.id))?(y.style.background="white",y.textContent="ADD TO QUEUE"):(y.style.background="#545454",y.textContent="DELETED FROM QUEUE"),p(e)}))}catch(t){console.log(t.message)}};(0,f.qs)("[data-modal-close]").addEventListener("click",(t=>{t.preventDefault(),$()}));D.addEventListener("click",(t=>{t.target===D&&$()}));window.addEventListener("keydown",(t=>{"Escape"!==t.key&&27!==t.keyCode||$()})),_(x,M),b.addEventListener("click",(async t=>{const e=t.target.closest(".MovieCard");if(e)try{const t=e.dataset.movie;await T(t),$()}catch(t){console.log(t)}})),M.addEventListener("click",(t=>{t.preventDefault(),g(M,x)})),x.addEventListener("click",(t=>{t.preventDefault(),_(x,M)}));
//# sourceMappingURL=my-library.4f0813e6.js.map
