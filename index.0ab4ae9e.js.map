{"mappings":"+eAAAA,OAAOC,iBAAiB,QAAQ,KAC9B,MAAMC,EAAUC,SAASC,cAAc,WAEvCF,EAAQG,UAAUC,IAAI,iBAEtBJ,EAAQD,iBAAiB,gBAAgB,KACvCE,SAASI,KAAKC,YAAY,YAC5B,IAGaL,SAASC,cAAc,WAAtC,MCVMK,EAAU,mCACVC,EAAW,+B,ICgBjBC,EAFiB,C,kBAbSC,MAAOC,EAAO,KACvC,IACC,MAAMC,QAAaC,MAClB,GAAGL,iCAAwCD,KAG5C,IAAKK,EAAKE,GAAI,MAAM,IAAIC,MAAMH,EAAKI,QAEnC,aAAaJ,EAAKK,MAGnB,CAFE,MAAOC,GACRC,QAAQC,MAAMF,EACf,I,ICqEDG,EADe,C,YA/EK,CACnB,CACCC,GAAI,GACJC,KAAM,UAEP,CACCD,GAAI,GACJC,KAAM,aAEP,CACCD,GAAI,GACJC,KAAM,aAEP,CACCD,GAAI,GACJC,KAAM,UAEP,CACCD,GAAI,GACJC,KAAM,SAEP,CACCD,GAAI,GACJC,KAAM,eAEP,CACCD,GAAI,GACJC,KAAM,SAEP,CACCD,GAAI,MACJC,KAAM,UAEP,CACCD,GAAI,GACJC,KAAM,WAEP,CACCD,GAAI,GACJC,KAAM,WAEP,CACCD,GAAI,GACJC,KAAM,UAEP,CACCD,GAAI,MACJC,KAAM,SAEP,CACCD,GAAI,KACJC,KAAM,WAEP,CACCD,GAAI,MACJC,KAAM,WAEP,CACCD,GAAI,IACJC,KAAM,mBAEP,CACCD,GAAI,MACJC,KAAM,YAEP,CACCD,GAAI,GACJC,KAAM,YAEP,CACCD,GAAI,MACJC,KAAM,OAEP,CACCD,GAAI,GACJC,KAAM,aC1ER,MAAMC,EAAgBvB,SAASC,cAAc,wBAE7CO,EAASgB,oBACNC,MAAKC,KAOD,SAAyBC,GAC9B,MAAMC,EAASD,EACZE,KAAI,EAACC,MAAEA,EAAKR,KAAEA,EAAIS,aAAEA,EAAYC,eAAEA,EAAcC,YAAEA,EAAWC,UAAEA,MAC9D,MAAMC,EAAc,mCAAmCF,IACjDG,EAAYL,EAAeA,EAAaM,MAAM,EAAG,GAAKL,EAAeK,MAAM,EAAG,GAC9EC,EAAYR,GAAgBR,EAGlC,IAAIiB,EAAgBL,EACjBL,KAAIR,IACH,MAAMmB,EAAQpB,EAAOqB,YAAYC,MAAKF,GAASA,EAAMnB,KAAOA,IAC5D,OAAOmB,EAAQ,CAAC,GAAGA,EAAMlB,QAAU,EAAE,IAEtCqB,OAAOC,SASV,OALEL,EADEA,EAAcM,OAAS,EACTN,EAAcF,MAAM,EAAG,GAAGS,KAAK,MAAQ,SAEvCP,EAAcO,KAAK,MAG9B,qGACmDX,WAAqBL,sIAExBQ,2EAEtCC,OAAmBH,4DAG1B,IAEXU,KAAK,IACRvB,EAAcwB,mBAAmB,YAAanB,EAChD,CAxCIoB,CAAgBtB,EAAKuB,QAAO,IAE7BC,OAAM/B,IACLD,QAAQiC,IAAIhC,EAAA","sources":["src/js/loader.js","src/js/API_variables.js","src/js/trendingMovie.js","src/js/genres.js","src/js/renderMovieCards.js"],"sourcesContent":["window.addEventListener('load', () => {\n  const spinner = document.querySelector('.loader');\n\n  spinner.classList.add('loader-hidden');\n\n  spinner.addEventListener('transitioned', () => {\n    document.body.removeChild('loader');\n  });\n});\n\nconst loader = document.querySelector('.loader');\n\nconst startSpin = () => {\n  loader.style.display = 'flex';\n};\n\nconst stopSpin = () => {\n  loader.style.display = 'none';\n};\n\nexport const circle = { loader, startSpin, stopSpin };\n","const API_KEY = \"bd1f74544935b756e43565ea50ae79a5\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst TREND_DAY_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\nconst SEARCH_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nconst VIDEO_URL = `/videos?api_key=${API_KEY}&language=en-US`;\n\nexport {\n\tAPI_KEY,\n\tBASE_URL,\n\tTREND_URL,\n\tSEARCH_URL,\n\tID_URL,\n\tBASE_IMG_URL,\n\tVIDEO_URL,\n\tTREND_DAY_URL,\n};\n","import { API_KEY, BASE_URL } from \"./API_variables.js\";\n\nconst getTrendingMovies = async (page = 1) => {\n\ttry {\n\t\tconst resp = await fetch(\n\t\t\t`${BASE_URL}/trending/movie/week?api_key=${API_KEY}`,\n\t\t);\n\n\t\tif (!resp.ok) throw new Error(resp.status);\n\n\t\treturn await resp.json();\n\t} catch (err) {\n\t\tconsole.error(err);\n\t}\n};\nconst Trending = { getTrendingMovies };\n\nexport default Trending;\n","//----Lista kategori zrobiona na sztywno aby sprawdzić działanie, ale trzeba będzie podpiąć skrypt pobierający to z API\n\nconst movieGenres = [\n\t{\n\t\tid: 28,\n\t\tname: \"Action\",\n\t},\n\t{\n\t\tid: 12,\n\t\tname: \"Adventure\",\n\t},\n\t{\n\t\tid: 16,\n\t\tname: \"Animation\",\n\t},\n\t{\n\t\tid: 35,\n\t\tname: \"Comedy\",\n\t},\n\t{\n\t\tid: 80,\n\t\tname: \"Crime\",\n\t},\n\t{\n\t\tid: 99,\n\t\tname: \"Documentary\",\n\t},\n\t{\n\t\tid: 18,\n\t\tname: \"Drama\",\n\t},\n\t{\n\t\tid: 10751,\n\t\tname: \"Family\",\n\t},\n\t{\n\t\tid: 14,\n\t\tname: \"Fantasy\",\n\t},\n\t{\n\t\tid: 36,\n\t\tname: \"History\",\n\t},\n\t{\n\t\tid: 27,\n\t\tname: \"Horror\",\n\t},\n\t{\n\t\tid: 10402,\n\t\tname: \"Music\",\n\t},\n\t{\n\t\tid: 9648,\n\t\tname: \"Mystery\",\n\t},\n\t{\n\t\tid: 10749,\n\t\tname: \"Romance\",\n\t},\n\t{\n\t\tid: 878,\n\t\tname: \"Science Fiction\",\n\t},\n\t{\n\t\tid: 10770,\n\t\tname: \"TV Movie\",\n\t},\n\t{\n\t\tid: 53,\n\t\tname: \"Thriller\",\n\t},\n\t{\n\t\tid: 10752,\n\t\tname: \"War\",\n\t},\n\t{\n\t\tid: 37,\n\t\tname: \"Western\",\n\t},\n];\n\nconst Genres = { movieGenres };\nexport default Genres;\n","import Trending from './trendingMovie.js';\nimport Genres from './genres.js';\n\nconst moviesGallery = document.querySelector('.movie-section__card');\n// -----Tworzenie galerii popularnych filmów\nTrending.getTrendingMovies()\n  .then(data => {\n    renderMovieCard(data.results);\n  })\n  .catch(error => {\n    console.log(error);\n  });\n\nexport function renderMovieCard(movies) {\n  const markup = movies\n    .map(({ title, name, release_date, first_air_date, poster_path, genre_ids }) => {\n      const moviePoster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n      const movieDate = release_date ? release_date.slice(0, 4) : first_air_date.slice(0, 4);\n      const movieName = title ? title : name;\n\n      // Wyszukiwanie gatunku filmowego po id:\n      let matchedGenres = genre_ids\n        .map(id => {\n          const genre = Genres.movieGenres.find(genre => genre.id === id);\n          return genre ? [`${genre.name}`] : '';\n        })\n        .filter(Boolean);\n\n      // Wyświetlane są tylko dwa pierwsze gatunki filmowe\n      if (matchedGenres.length > 2) {\n        matchedGenres = matchedGenres.slice(0, 2).join(', ') + ' (...)';\n      } else {\n        matchedGenres = matchedGenres.join(', ');\n      }\n\n      return `<li class=\"movie-container__card\">\n            <div class=\"poster\"><img class=\"poster__img\" src=\"${moviePoster}\" alt=\"${title} poster\" loading=\"lazy\" /></div>\n            <div class=\"movieInfo\">\n               <p class=\"movieInfo__item movieInfo--title\">${movieName}</p>\n               <p class=\"movieInfo__item\">\n                     ${matchedGenres} | ${movieDate}\n              </p>\n            </div>\n          </li>`;\n    })\n    .join('');\n  moviesGallery.insertAdjacentHTML('beforeend', markup);\n}\n"],"names":["window","addEventListener","spinner","document","querySelector","classList","add","body","removeChild","$b2ce9de2c8fef601$export$a9861bd62f48e142","$b2ce9de2c8fef601$export$ca6dda5263526f75","$cad5564c83535ebf$export$2e2bcd8739ae039","async","page","resp","fetch","ok","Error","status","json","err","console","error","$bc36aade2b53bb55$export$2e2bcd8739ae039","id","name","$6a4e52948675ad88$var$moviesGallery","getTrendingMovies","then","data","movies","markup","map","title","release_date","first_air_date","poster_path","genre_ids","moviePoster","movieDate","slice","movieName","matchedGenres","genre","movieGenres","find","filter","Boolean","length","join","insertAdjacentHTML","$6a4e52948675ad88$export$605b145a07818080","results","catch","log"],"version":3,"file":"index.0ab4ae9e.js.map"}