{"mappings":"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","sources":["src/js/modal.js","src/library/local-storage.js","src/library/add_to_watched_queue.js"],"sourcesContent":["import axios from 'axios';\nimport { qs } from './tools';\nimport { BASE_URL, API_KEY } from './api_variables';\nimport { queue, watched } from '../library/local-storage';\nimport { onAddToWatched, onAddToQueue } from '../library/add_to_watched_queue';\nimport { showHideLoader } from './loader.js';\nimport refs from './refs.js';\n\nconst gallerysDom = qs('.Gallery');\nconst galleryTrendDom = qs('.movie-section__card');\n\nconst modal = qs('[data-modal]');\nconst closeModalBtn = qs('[data-modal-close]');\nconst mov = qs('.mov');\n\nconst toggleModal = () => modal.classList.toggle('is-hidden');\n\nconst fetchMovie = async movieId => {\n  showHideLoader(refs.loader);\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n  );\n  showHideLoader(refs.loader);\n\n  const movie = response.data;\n\n  return movie;\n};\nconst searchMovieById = async movieId => {\n  try {\n    const movie = await fetchMovie(movieId);\n\n    const movieName = movie.title;\n    const vote = movie.vote_average.toFixed(1);\n    const votes = movie.vote_count;\n    const popularity = movie.popularity.toFixed(1);\n    const originalTitle = movie.original_title;\n    const genres = movie.genres.map(ob => ob.name).join(', ');\n    const overview = movie.overview;\n\n    const poster = movie.poster_path\n      ? `https://image.tmdb.org/t/p/${window.devicePixelRatio > 1 ? 'w780' : 'w500'}/${\n          movie.poster_path\n        }`\n      : movie.title;\n    mov.innerHTML = ` \n\t\t<div class=\"box modal__row\">\n              <img class=\"modal__poster\" src=${poster} alt=\"plakat filmu\" sizes=\"(min-width: 1200px) 370px\" />\n\t          <div>\n\t\t          <div class=\"modal__tittle-film\">${movieName}\n\t\t\t\t  </div>\n\t\t          <div class=\"modal__values\">\n\t\t                 <ul class=\"modal__list\">\n\t\t\t\t\t\t <li class=\"modal__details\"> \n\t\t\t\t\t\t <div class=\"modal__list-left\">Vote&nbsp/&nbspVotes</div>\n\t\t\t\t\t\t <div class=\"modal__list-right\">\n\t\t\t\t\t\t            <span class=\"modal__vote-details\">${vote}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"modal__list-left\">/</span> \n\t\t\t\t\t\t\t\t\t<span class=\"modal__vote-summary\">${votes}</span>\n\t\t\t\t\t\t </div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class=\"modal__details\"> \n\t\t\t\t\t\t <div class=\"modal__list-left\">Popularity</div>\n\t\t\t\t\t\t <div class=\"modal__list-right\">${popularity}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class=\"modal__details\"> \n\t\t\t\t\t\t <div class=\"modal__list-left\">Original&nbspTitle</div>\n\t\t\t\t\t\t <div class=\"modal__list-right\">${originalTitle}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t <li class=\"modal__details\"> \n\t\t\t\t\t\t <div class=\"modal__list-left\">Genre</div>\n\t\t\t\t\t\t <div class=\"modal__list-right\">${genres}</div>\n\t\t\t\t\t\t </li> \n\t\t\t\t\t\t </ul>\n\t\t                 \n\t\t          </div>\n\t\t          <div class=\"modal__tittle-describe-tittle\">About</div>\n\t\t             <p class=\"modal__tittle-describe\">\n\t\t              ${overview}\n\t\t                  </p>\n\t\t              <div class=\"modal__buttons\">\n\t\t             <button class=\"modal__button-watched\" id=\"watched\">add to Watched</button>\n\t\t              <button class=\"modal__button-queue\" id=\"queue\">add to queue</button>\n\t\t                </div>\n\t\t       </div>\n\t\t</div>`;\n    const watchedButton = qs('#watched');\n    const queueButton = qs('#queue');\n    if (watched.find(obj => obj.id === movie.id)) {\n      watchedButton.style.background = 'green';\n      watchedButton.textContent = 'DELETED FROM WATCHED';\n      return;\n    }\n    if (queue.find(obj => obj.id === movie.id)) {\n      queueButton.style.background = 'green';\n      queueButton.textContent = 'DELETED FROM QUEUE';\n      return;\n    }\n    watchedButton.addEventListener('click', e => {\n      e.preventDefault();\n      watchedButton.style.background = 'green';\n      watchedButton.textContent = 'DELETED FROM WATCHED';\n      onAddToWatched(movie, watchedButton);\n    });\n    queueButton.addEventListener('click', e => {\n      e.preventDefault();\n      queueButton.style.background = 'green';\n      queueButton.textContent = 'DELETED FROM QUEUE';\n      onAddToQueue(movie, queueButton);\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\ncloseModalBtn.addEventListener('click', e => {\n  e.preventDefault();\n  toggleModal();\n});\nconst closeByClick = event => {\n  if (event.target === modal) {\n    toggleModal();\n  }\n};\nmodal.addEventListener('click', closeByClick);\n\nconst closeByPush = event => {\n  if (event.key === 'Escape' || event.keyCode === 27) {\n    toggleModal();\n  }\n};\nwindow.addEventListener('keydown', closeByPush);\ngallerysDom.addEventListener('click', e => {\n  const movieCard = e.target.closest('.MovieCard');\n\n  if (movieCard) {\n    const movieId = movieCard.dataset.movie;\n\n    toggleModal();\n\n    searchMovieById(movieId);\n  }\n});\n\ngalleryTrendDom.addEventListener('click', e => {\n  const movieCard = e.target.closest('.movie-container__card');\n\n  if (movieCard) {\n    const movieId = movieCard.dataset.id;\n\n    toggleModal();\n\n    searchMovieById(movieId);\n  }\n});\n","const KEY_WATCHED = \"watched\";\nconst KEY_QUEUE = \"queue\";\n\nconst getWatchedLocalStorage = () => {\n\treturn JSON.parse(localStorage.getItem(KEY_WATCHED));\n}; // funkcja do ściągania fimów do kolejki local storage\n\nconst getQueueLocalStorage = () => {\n\treturn JSON.parse(localStorage.getItem(KEY_QUEUE));\n}; // funkcja do ściągania filmów obejrzanych z local storage\nconst watched = getWatchedLocalStorage() || [];\nconst queue = getQueueLocalStorage() || [];\nconst setWatchedLocalStorage = (arr) => {\n\tlocalStorage.setItem(KEY_WATCHED, JSON.stringify(arr));\n}; // funckja do wrzucania filmów do local storage - do obejrzanych\n\nconst setQueueLocalStorage = (arr) => {\n\tlocalStorage.setItem(KEY_QUEUE, JSON.stringify(arr));\n}; // funckja do wrzucania filmów do local storage - do kolejki\n\nexport {\n\tKEY_WATCHED,\n\tKEY_QUEUE,\n\twatched,\n\tqueue,\n\tgetWatchedLocalStorage,\n\tgetQueueLocalStorage,\n\tsetWatchedLocalStorage,\n\tsetQueueLocalStorage,\n};\n","import {\n\tqueue,\n\twatched,\n\tsetWatchedLocalStorage,\n\tsetQueueLocalStorage,\n} from \"./local-storage\";\n\nconst onAddToWatched = (movie, watchedButton) => {\n\tif (watched.find((obj) => obj.id === movie.id)) {\n\t\treturn;\n\t}\n\twatched.push(movie);\n\tsetWatchedLocalStorage(watched);\n};\n\nconst onAddToQueue = (movie, queueButton) => {\n\tif (queue.find((obj) => obj.id === movie.id)) {\n\t\treturn;\n\t}\n\tqueue.push(movie);\n\tsetQueueLocalStorage(queue);\n};\nexport { onAddToWatched, onAddToQueue };\n"],"names":["$hGVxz","parcelRequire","$204b435b9ec7ef51$export$bf348ba91bbfa858","$204b435b9ec7ef51$export$18da41cc526d0bf2","$204b435b9ec7ef51$export$e330b7faa493c08b","JSON","parse","localStorage","getItem","$204b435b9ec7ef51$export$4f7fa46ff53e516f","$a9dc0d10b91efa36$export$8365ca842e8c6100","movie","watchedButton","arr","find","obj","id","push","setItem","stringify","$a9dc0d10b91efa36$export$f1fef8fa31d6cdf5","queueButton","$2ea800676e6f7669$var$gallerysDom","$b08YZ","qs","$2ea800676e6f7669$var$galleryTrendDom","$2ea800676e6f7669$var$modal","$2ea800676e6f7669$var$closeModalBtn","$2ea800676e6f7669$var$mov","$2ea800676e6f7669$var$toggleModal","classList","toggle","$2ea800676e6f7669$var$searchMovieById","async","movieId","$fHyLY","showHideLoader","$dlUZe","default","loader","response","get","$iVSHh","BASE_URL","API_KEY","data","$2ea800676e6f7669$var$fetchMovie","movieName","title","vote","vote_average","toFixed","votes","vote_count","popularity","originalTitle","original_title","genres","map","ob","name","join","overview","poster","poster_path","window","devicePixelRatio","innerHTML","style","background","textContent","addEventListener","e","preventDefault","error","console","log","message","event","target","key","keyCode","movieCard","closest","dataset"],"version":3,"file":"index.b3be233c.js.map"}