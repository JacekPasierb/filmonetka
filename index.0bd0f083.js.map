{"mappings":"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","sources":["src/js/genres.js","src/js/API_variables.js","src/js/PaginationRatunek.js"],"sourcesContent":["//----Lista kategori zrobiona na sztywno aby sprawdzić działanie, ale trzeba będzie podpiąć skrypt pobierający to z API\n\nconst movieGenres = [\n\t{\n\t\tid: 28,\n\t\tname: \"Action\",\n\t},\n\t{\n\t\tid: 12,\n\t\tname: \"Adventure\",\n\t},\n\t{\n\t\tid: 16,\n\t\tname: \"Animation\",\n\t},\n\t{\n\t\tid: 35,\n\t\tname: \"Comedy\",\n\t},\n\t{\n\t\tid: 80,\n\t\tname: \"Crime\",\n\t},\n\t{\n\t\tid: 99,\n\t\tname: \"Documentary\",\n\t},\n\t{\n\t\tid: 18,\n\t\tname: \"Drama\",\n\t},\n\t{\n\t\tid: 10751,\n\t\tname: \"Family\",\n\t},\n\t{\n\t\tid: 14,\n\t\tname: \"Fantasy\",\n\t},\n\t{\n\t\tid: 36,\n\t\tname: \"History\",\n\t},\n\t{\n\t\tid: 27,\n\t\tname: \"Horror\",\n\t},\n\t{\n\t\tid: 10402,\n\t\tname: \"Music\",\n\t},\n\t{\n\t\tid: 9648,\n\t\tname: \"Mystery\",\n\t},\n\t{\n\t\tid: 10749,\n\t\tname: \"Romance\",\n\t},\n\t{\n\t\tid: 878,\n\t\tname: \"Science Fiction\",\n\t},\n\t{\n\t\tid: 10770,\n\t\tname: \"TV Movie\",\n\t},\n\t{\n\t\tid: 53,\n\t\tname: \"Thriller\",\n\t},\n\t{\n\t\tid: 10752,\n\t\tname: \"War\",\n\t},\n\t{\n\t\tid: 37,\n\t\tname: \"Western\",\n\t},\n];\n\nconst Genres = { movieGenres };\nexport default Genres;\n","const API_KEY = \"bd1f74544935b756e43565ea50ae79a5\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst TREND_DAY_URL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\nconst SEARCH_URL = `${BASE_URL}/search/movie?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst BASE_IMG_URL = \"https://image.tmdb.org/t/p/w500\";\nconst VIDEO_URL = `/videos?api_key=${API_KEY}&language=en-US`;\n\nexport {\n\tAPI_KEY,\n\tBASE_URL,\n\tTREND_URL,\n\tSEARCH_URL,\n\tID_URL,\n\tBASE_IMG_URL,\n\tVIDEO_URL,\n\tTREND_DAY_URL,\n};\n","import Genres from './genres.js';\nimport { API_KEY, BASE_URL, TREND_URL } from './API_variables.js';\n\n// import { renderMovies } from \"./renderMovieCards\";\n// import { getTrendMovies } from './trendingMovie.js';\n// import { currentPage } from \"./trendingMovie.js\"\n\nconst prev = document.getElementById('prev')\nconst next = document.getElementById('next')\nconst current = document.getElementById('current')\n\nlet currentPage = 1;\nlet nextPage = 2;\nlet prevPage = 3;\nlet lastUrl = '';\nlet totalPages = 100;\n\n\nconst moviesGallery = document.querySelector('.movie-section__card');\n\ngetTrendMovies(TREND_URL);\n\nfunction getTrendMovies(url) {\n  lastUrl = url\n      fetch(url).then(res => res.json()).then(data => {\n \n        if(data.results.length !== 0){\n        renderMovies(data.results);\n        currentPage = data.page;\n        nextPage = currentPage + 1;\n        prevPage = currentPage - 1;\n        totalPages = data.total_pages;\n\n        current.innerText = currentPage;\n\n        if(currentPage <= 1){\n          prev.classList.add('disabled');\n          next.classList.remove('disabled')\n        }else if(currentPage>= totalPages){\n          prev.classList.remove('disabled');\n          next.classList.add('disabled')\n        }else{\n          prev.classList.remove('disabled');\n          next.classList.remove('disabled')\n        }\n      }\n  })\n}\n\nfunction renderMovies(data) {\n  moviesGallery.innerHTML = '';\n\n  data.forEach(markup => {\n    const { title, name, release_date, first_air_date, poster_path, genre_ids } = markup;\n    const moviePoster = `https://image.tmdb.org/t/p/w500/${poster_path}`;\n    const movieDate = release_date.slice(0, 4) : first_air_date.slice(0, 4)\n    const movieName = title ? title : name;\n    let matchedGenres = genre_ids\n    .map(id => {\n      const genre = Genres.movieGenres.find(genre => genre.id === id);\n      return genre ? [`${genre.name}`] : '';\n    })\n    .filter(Boolean);\n\n  // Wyświetlane są tylko dwa pierwsze gatunki filmowe\n  if (matchedGenres.length > 2) {\n    matchedGenres = matchedGenres.slice(0, 2).join(', ') + ' (...)';\n  } else {\n    matchedGenres = matchedGenres.join(', ');\n  }\n    const markupEl = document.createElement('li');\n    markupEl.classList.add('movie-container__card');\n    markupEl.innerHTML = \n    `\n    <div class=\"poster\"><img class=\"poster__img\" src=\"${moviePoster}\" alt=\"${title} poster\" loading=\"lazy\" /></div>\n    <div class=\"movieInfo\">\n       <p class=\"movieInfo__item movieInfo--title\">${movieName}</p>\n       <p class=\"movieInfo__item\">\n             ${matchedGenres} | ${movieDate}\n      </p>\n    </div>\n    `\n    moviesGallery.appendChild(markupEl);\n  })\n}\n\nprev.addEventListener('click', () => {\n  if(prevPage > 0){\n    pageCall(prevPage);\n  }\n})\n\nnext.addEventListener('click', () => {\n  if(nextPage <= totalPages){\n    pageCall(nextPage);\n  }\n})\n\nconsole.log(lastUrl)\n\nfunction pageCall(page){\n  let urlSplit = lastUrl.split('?');\n  console.log(urlSplit);\n  let queryParams = urlSplit[1].split('&');\n  console.log(queryParams);\n  let key = queryParams[queryParams.length -1].split('=');\n  console.log(key);\n  if(key[0] != 'page'){\n    let url = lastUrl + '&page='+page\n    getTrendMovies(url)\n  }else{\n    key[1] = page.toString();\n    let a = key.join('=');\n    queryParams[queryParams.length -1] = a;\n    let b = queryParams.join('&');\n    let url = urlSplit[0] +'?'+ b\n    getTrendMovies(url);\n  }\n}"],"names":["$bc36aade2b53bb55$export$2e2bcd8739ae039","id","name","$b2ce9de2c8fef601$export$a9861bd62f48e142","$b2ce9de2c8fef601$export$ca6dda5263526f75","$b2ce9de2c8fef601$export$3e13cfa1fb75582c","$55674e7c8180d6a6$var$prev","document","getElementById","$55674e7c8180d6a6$var$next","$55674e7c8180d6a6$var$current","$55674e7c8180d6a6$var$currentPage","$55674e7c8180d6a6$var$nextPage","$55674e7c8180d6a6$var$prevPage","$55674e7c8180d6a6$var$lastUrl","$55674e7c8180d6a6$var$totalPages","$55674e7c8180d6a6$var$moviesGallery","querySelector","$55674e7c8180d6a6$var$getTrendMovies","url","fetch","then","res","json","data","results","length","innerHTML","forEach","markup","title","release_date","first_air_date","poster_path","genre_ids","moviePoster","movieDate","slice","movieName","matchedGenres","map","genre","movieGenres","find","filter","Boolean","join","markupEl","createElement","classList","add","appendChild","$55674e7c8180d6a6$var$renderMovies","page","total_pages","innerText","remove","$55674e7c8180d6a6$var$pageCall","urlSplit","split","console","log","queryParams","key","toString","a","b","addEventListener"],"version":3,"file":"index.0bd0f083.js.map"}